## 使用说明

### 安装部署
1. 安装Pipfile中的环境；
2. 配置config.py中的数据库，如果没有数据库，使用data_process.create_db.py创建数据库；
3. 配置gunicorn.py中的信息；
4. 配置config.py中`DEBUG=False)`；
5. 执行`nohup gunicorn -c gunicorn.py main_mix_ratio:app &`命令。

### 强度预测模型训练
使用deep_model_strength.strenth_prediction.py中的函数训练模型。

### 文件说明
```
.
├── config.py  # 数据库配置信息
├── data_process  # 写入数据库相关操作
│   ├── create_db.py  # 创建数据库
│   ├── csv表  # 本地数据
│   │   ├── 粉煤灰质量检测列表.csv
│   │   ├── 矿渣粉质量检测列表.csv
│   │   ├── 膨胀剂质量检测列表.csv
│   │   ├── 施工配合比相关数据.csv
│   │   ├── 石灰石粉质量检测列表.csv
│   │   ├── 水泥质检列表.csv
│   │   └── 外加剂质量台账列表.csv
│   ├── get_data_from_local.py  # 读取本地数据到数据库（弃用）
│   ├── get_data_from_web.py  # 从web接口拉取数据
│   └── util.py
├── gunicorn.py  # gunicorn容器配置文件
├── main_app
│   ├── deep_model_strength  # 混凝土强度预测模型，使用了原材料用量和质量预测
│   │   ├── get_data_from_db.py  # 从数据库中读取数据
│   │   ├── strength_prediction.py  # 基于深度学习的强度预测模型
│   │   ├── strength_prediction_traditional.py  # 基于svm的强度预测模型（没用）
│   │   └── torch_model_params.pkl  # 保存的模型参数
│   ├── initial_screen.py  # 对混凝土配合比进行初筛
│   ├── model.py  # 数据库模型
│   ├── push_mix_ratio.py # 配合比生成的主程序
│   ├── restful  # restful测试文件
│   │   ├── mix_ratio_request.json
│   │   ├── mix_ratio_response.json
│   │   ├── strength_request.json
│   │   └── strength_response.json
│   ├── routes.py  # 路由
│   └── templates  # 简单的网页文件
│       └── index.html
├── main_mix_ratio.py  # 主函数
├── Pipfile  # 包含了运行程序需要安装的包
├── README
└── test.py
```